---
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import ScrollTop from '../components/ScrollTop.astro'

//style import
import '../styles/global.css'

interface Props {
  title: string
  description: string
}

const {title, description } = Astro.props as Props
--- 

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/logo-icon.svg"/>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <script is:inline>
      if (localStorage.getItem('color-theme') === 'dark') {
        document.documentElement.classList.add('dark');
      } else if (localStorage.getItem('color-theme') === 'light' || !('color-theme' in localStorage)) {
        document.documentElement.classList.remove('dark');
      }
    </script>
  </head>
  <body id="content-top" class="flex flex-col items-center min-h-screen max-w-screen-xl mx-auto relative transition-all duration-300 ease-out bg-light-theme bg-cover dark:bg-dark-theme bg-scroll scroll-smooth text-steelBlueGray dark:text-lightGray">
    <Navbar />
    <main class="w-full flex-grow flex flex-col justify-start items-center px-5 transition-all duration-700 sm:px-10 relative " >
      <slot/>
    </main>
    <ScrollTop/>
    <Footer/>
  </body>
</html>


<script is:inline>
  function reveal() {
    const reveals = document.querySelectorAll('.reveal');
    reveals.forEach((reveal) => {
      const windowHeight = window.innerHeight;
      const revealTop = reveal.getBoundingClientRect().top;
      const revealPoint = 100;

      if (revealTop < windowHeight - revealPoint) {
        reveal.classList.add('reveal-active');
      } 
    });
  }

  window.addEventListener('scroll', reveal);
</script>
